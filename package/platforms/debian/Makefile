GUI_PATH = ../../../gui/xml2rfc_gui
CLI_PATH = ../../../cli/xml2rfc
SYNC = rsync -aW --exclude-from=../../shared/exclude.txt
TEMPLATE_ROOT = template
BUILD_ROOT = build
DIST_ROOT = dist
VERSION := $(shell cd "$(GUI_PATH)/.." && python -c "import xml2rfc_gui; print '.'.join(map(str, xml2rfc_gui.VERSION))")
SUBVERSION = 1
ARCH = all

DEB_DIST = $(BUILD_ROOT)/deb_dist
DEB_STAGE = $(DEB_DIST)/xml2rfc-gui-$(VERSION)
PKG_FILE = python-xml2rfc-gui_$(VERSION)-$(SUBVERSION)_$(ARCH).deb

TEMPLATE_FILES := $(shell find $(TEMPLATE_ROOT) -type f | grep -v .svn )
BUILD_FILES = $(patsubst $(TEMPLATE_ROOT)/%, $(BUILD_ROOT)/%, $(TEMPLATE_FILES))


# Final debian package 
$(DIST_ROOT)/$(PKG_FILE): verifydep $(DEB_DIST)/$(PKG_FILE) 
	@echo "Copying final package..."
	mkdir -p $(DIST_ROOT)
	cp $(DEB_DIST)/$(PKG_FILE) $@

# Debian package built with debuild
$(DEB_DIST)/$(PKG_FILE): $(DEB_STAGE)
	@echo "Building debian package..."
	cd $(DEB_STAGE) && debuild -us -uc


# Debian staging directory generated by python stdeb
$(DEB_STAGE): $(BUILD_FILES) $(BUILD_ROOT)/xml2rfc $(BUILD_ROOT)/xml2rfc_gui 
	@echo "Generating debian package metadata with stdeb..."
	cd $(BUILD_ROOT) && python setup.py --command-packages=stdeb.command sdist_dsc


# Client xml2rfc code
$(BUILD_ROOT)/xml2rfc: $(shell find $(CLI_PATH) -name *.py)
	$(SYNC) $(CLI_PATH)/ $@


# GUI xml2rfc code
$(BUILD_ROOT)/xml2rfc_gui: $(shell find $(GUI_PATH) -name *.py)
	$(SYNC) $(GUI_PATH)/ $@


# Copy template files into build root
$(BUILD_ROOT)/%: $(TEMPLATE_ROOT)/%
	@mkdir -p `dirname $@`
	cp $< $@

verifydep:
	@echo "Verifying build requirements..."
	@pip freeze | grep -i stdeb== || (echo "ERROR: Missing python package 'stdeb', try running 'make depend'" && exit 2)

depend:
	pip install stdeb==0.6.0
	@echo "Requirements up to date."

clean:
	@echo "Cleaning for Debian..."
	rm -rf "$(BUILD_ROOT)"
	rm -rf "$(DIST_ROOT)"
